// ЁЯУМ ржПржХрзНрж╕рзЗрж▓ ржбрзЗржЯрж╛ ржЖржирж╛рж░ API рж▓рж┐ржВржХ
const apiUrl = "https://prize-bond-data-table-ta12.onrender.com/api/excel-data";

// ЁЯФД ржПржЦрж╛ржирзЗ рж╕ржорзНржкрзВрж░рзНржг ржУрзЯрж╛рж░рзНржХржмрзБржХ (Workbook) ржбрзЗржЯрж╛ рж░рж╛ржЦрж╛ рж╣ржмрзЗ
let workbookData = null;

// ЁЯФГ ржкрзБрж░рзЛ HTML рж▓рзЛржб рж╣рж▓рзЗ fetch рж╢рзБрж░рзБ рж╣ржмрзЗ
window.addEventListener('DOMContentLoaded', () => {
  fetch(apiUrl)
    .then(res => res.json())
    .then(data => {
      workbookData = data;

      // ЁЯЧВя╕П "Header" ржмрж╛ржж ржжрж┐рзЯрзЗ ржмрж╛ржХрж┐ рж╢рзАржЯржЧрзБрж▓рзЛрж░ ржирж╛ржо descending (ржирж┐ржорзНржиржХрзНрж░ржорзЗ) рж╕рж╛ржЬрж╛ржирзЛ
      const sheetNames = Object.keys(workbookData)
        .filter(name => name !== "Header")
        .sort()
        .reverse();

      // тЬЕ ржкрзНрж░рзЯрзЛржЬржирзАрзЯ DOM ржПрж▓рж┐ржорзЗржирзНржЯржЧрзБрж▓рзЛ ржзрж░рзЗ рж░рж╛ржЦржЫрж┐
      const dropdown = document.querySelector('.dropdown');
      const dropdownButton = document.getElementById('dropdown-button');
      const dropdownSelected = document.getElementById('dropdown-selected');
      const dropdownMenu = document.getElementById('dropdown-menu');
      const arrow = document.querySelector('.dropdown-arrow');

      // ЁЯФД ржкрзБрж░ржирзЛ ржорзЗржирзБ ржХрзНрж▓рж┐рзЯрж╛рж░ ржХрж░рж╛
      dropdownMenu.innerHTML = '';

      // ЁЯФ╜ ржкрзНрж░рждрж┐ржЯрж┐ рж╢рзАржЯ ржирж╛ржо ржжрж┐рзЯрзЗ ржбрзНрж░ржкржбрж╛ржЙржи ржорзЗржирзБрж░ ржЬржирзНржп ржЕржкрж╢ржи рждрзИрж░рж┐ ржХрж░рж╛
      sheetNames.forEach(sheet => {
        const item = document.createElement('a'); // 'a' ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржЫрж┐ ржХрж╛рж░ржг CSS ржПржЯрж╛ржХрзЗ рж╕рзНржЯрж╛ржЗрж▓ ржХрж░рзЗржЫрзЗ
        item.classList.add('dropdown-item');
        item.textContent = sheet;
        item.href = '#';
        item.addEventListener('click', (e) => {
          e.preventDefault(); // ржбрж┐ржлрж▓рзНржЯ рж▓рж┐ржЩрзНржХ ржХрзНрж▓рж┐ржХ рж░рзЛржз

          // ЁЯЯв ржмрзЗржЫрзЗ ржирзЗржУрзЯрж╛ рж╢рзАржЯ ржирж╛ржо ржмрж╛ржЯржирзЗ ржжрзЗржЦрж╛ржУ
          dropdownSelected.innerHTML = `<b>${sheet}</b>`;

          // ЁЯФ┤ ржбрзНрж░ржкржбрж╛ржЙржи ржорзЗржирзБ ржмржирзНржз ржХрж░рзЛ ржПржмржВ ржЕрзНржпрж╛рж░рзЛ рж░рж┐рж╕рзЗржЯ
          dropdown.classList.remove('show');
          arrow.style.transform = 'translateY(-50%) rotate(0deg)';

          // тЬЕ рж╕ржВрж╢рзНрж▓рж┐рж╖рзНржЯ ржЯрзЗржмрж┐рж▓ржЧрзБрж▓рзЛ ржЖржкржбрзЗржЯ ржХрж░рзЛ
          loadCol2TableData(sheet);
          loadCol3TableData(sheet);
          loadCol4TableData(sheet);
          loadColumnData(sheet);
        });

        dropdownMenu.appendChild(item); // ржорзЗржирзБрждрзЗ ржЕржкрж╢ржи ржпрзЛржЧ
      });

      // тЬЕ ржкрзЗржЬ рж▓рзЛржбрзЗрж░ рж╕ржорзЯ ржкрзНрж░ржержо рж╢рзАржЯ ржмрзЗржЫрзЗ ржирж┐рзЯрзЗ ржбрж┐ржлрж▓рзНржЯ ржЯрзЗржмрж┐рж▓ рж▓рзЛржб ржХрж░рж╛
      dropdownSelected.innerHTML = `<b>${sheetNames[0]}</b>`;
      loadCol2TableData(sheetNames[0]);
      loadCol3TableData(sheetNames[0]);
      loadCol4TableData(sheetNames[0]);
      loadColumnData(sheetNames[0]);
    });

  // ЁЯФШ ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рж▓рзЗ ржорзЗржирзБ ржЦрзБрж▓ржмрзЗ ржмрж╛ ржмржирзНржз рж╣ржмрзЗ ржПржмржВ ржЕрзНржпрж╛рж░рзЛ ржШрзБрж░ржмрзЗ
  document.getElementById('dropdown-button').addEventListener('click', () => {
    const dropdown = document.querySelector('.dropdown');
    const arrow = document.querySelector('.dropdown-arrow');

    const isOpen = dropdown.classList.toggle('show'); // show ржХрзНрж▓рж╛рж╕ ржЯржЧрж▓

    // ЁЯМА ржЕрзНржпрж╛рж░рзЛ ржШрзЛрж░рж╛ржУ ржмрж╛ рж░рж┐рж╕рзЗржЯ ржХрж░рзЛ
    if (isOpen) {
      arrow.style.transform = 'translateY(-50%) rotate(180deg)';
    } else {
      arrow.style.transform = 'translateY(-50%) rotate(0deg)';
    }
  });

  // ЁЯУд ржбрзНрж░ржкржбрж╛ржЙржирзЗрж░ ржмрж╛ржЗрж░рзЗ ржХрзНрж▓рж┐ржХ ржХрж░рж▓рзЗ ржорзЗржирзБ ржмржирзНржз ржПржмржВ ржЕрзНржпрж╛рж░рзЛ рж░рж┐рж╕рзЗржЯ рж╣ржмрзЗ
  document.addEventListener('click', (e) => {
    const dropdown = document.querySelector('.dropdown');
    const arrow = document.querySelector('.dropdown-arrow');

    // ржпржжрж┐ ржХрзНрж▓рж┐ржХ ржХрж░рж╛ ржПрж▓рж┐ржорзЗржирзНржЯ dropdown-ржПрж░ ржмрж╛ржЗрж░рзЗ рж╣рзЯ
    if (!dropdown.contains(e.target)) {
      dropdown.classList.remove('show');
      arrow.style.transform = 'translateY(-50%) rotate(0deg)';
    }
  });
});


const button = document.getElementById("dropdown-button");

button.addEventListener("mouseenter", () => {
  button.classList.add("stop-shiny");
});

button.addEventListener("mouseleave", () => {
  button.classList.remove("stop-shiny");
});







// тЬЕ UPDATED FUNCTION: col2-table =====================================
function loadCol2TableData(sheetName) {
  if (!workbookData || !workbookData[sheetName]) return;

  const data = workbookData[sheetName];
  const table = document.getElementById("col2-table");
  table.innerHTML = "";

  const row1 = document.createElement("tr");
  const row2 = document.createElement("tr");


  // ржкрзНрж░ржержо ржжрзБржЗржЯрж╛ ржХрж▓рж╛ржо рж╕ржм рж╕ржорзЯ ржерж╛ржХржмрзЗ, рждрж╛ржЗ рзиржЯрж┐ ржлрж╛ржБржХрж╛ td ржпрзЛржЧ ржХрж░рж▓рж╛ржо (ржпрзЗржЦрж╛ржирзЗ header ржжрж┐рждрзЗ ржкрж╛рж░рзЛ)
  // ржПржЦрж╛ржирзЗ ржлрж╛ржБржХрж╛ рж░рж╛ржЦрж▓рж╛ржо, рждрзБржорж┐ ржЪрж╛ржЗрж▓рзЗ рж╕рж░рж╛рж╕рж░рж┐ header text ржмрж╕рж╛рждрзЗ ржкрж╛рж░рзЛ
  
  
  // ЁЯЯй A1 cell of HTML table тЖР Excel's F1 (row 0, column 5)
  const a1 = document.createElement("td");
  a1.classList.add("highlight");
  a1.textContent = (data[0]?.[5] ?? "").trim() || "1st Prize"; // fallback if blank
  row1.appendChild(a1);

  // ЁЯЯй A2 cell of HTML table тЖР Excel's G1 (row 0, column 6)
  const a2 = document.createElement("td");
  a2.classList.add("highlight");
  a2.textContent = (data[0]?.[6] ?? "").trim()  || "2nd Prize"; // fallback if blank
  row2.appendChild(a2);

  // ЁЯЯи B1 cell of HTML table тЖР Excel's F2 (row 1, column 5)
  const b1 = document.createElement("td");
  b1.classList.add("highlight");
  b1.textContent = data[1]?.[5] ?? "";
  row1.appendChild(b1);

  // ЁЯЯи B2 cell of HTML table тЖР Excel's G2 (row 1, column 6)
  const b2 = document.createElement("td");
  b2.classList.add("highlight");
  b2.textContent = data[1]?.[6] ?? "";
  row2.appendChild(b2);




  // ржПржХрзНрж╕рзЗрж▓ ржбрзЗржЯрж╛рж░ ржкрзНрж░ржержо ржХрж▓рж╛ржо ржерзЗржХрзЗ ржбрзЗржЯрж╛ row1 ржП ржпрзЛржЧ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ (рззржо рж╕рж╛рж░рж╛ ржмрж╛ржж ржжрж┐рзЯрзЗ)
  for (let i = 1; i < data.length; i++) {
    const val = data[i]?.[0] ?? "";
    const td = document.createElement("td");
    td.textContent = val;
    row1.appendChild(td);
  }

  // ржПржХрзНрж╕рзЗрж▓ ржбрзЗржЯрж╛рж░ ржжрзНржмрж┐рждрзАрзЯ ржХрж▓рж╛ржо ржерзЗржХрзЗ ржбрзЗржЯрж╛ row2 рждрзЗ ржпрзЛржЧ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ (рззржо рж╕рж╛рж░рж╛ ржмрж╛ржж ржжрж┐рзЯрзЗ)
  for (let i = 1; i < data.length; i++) {
    const val = data[i]?.[1] ?? "";
    const td = document.createElement("td");
    td.textContent = val;
    row2.appendChild(td);
  }

  // ржПржЦржи ржЦрж╛рж▓рж┐ ржХрж▓рж╛ржо ржЧрзБрж▓рзЛ рж▓рзБржХрж╛ржирзЛ рж╣ржмрзЗ, рждржмрзЗ ржкрзНрж░ржержо ржжрзБржЗржЯрж╛ ржХрж▓рж╛ржо (index 0,1) рж╕ржм рж╕ржорзЯ ржжрзЗржЦрж╛ржмрзЗ
  const row1Tds = Array.from(row1.querySelectorAll('td'));
  const row2Tds = Array.from(row2.querySelectorAll('td'));

  for (let col = 2; col < row1Tds.length; col++) {
    const cell1Text = row1Tds[col].textContent.trim();
    const cell2Text = row2Tds[col].textContent.trim();

    if (cell1Text === "" && cell2Text === "") {
      row1Tds[col].style.display = "none";
      row2Tds[col].style.display = "none";
    } else {
      row1Tds[col].style.display = "";
      row2Tds[col].style.display = "";
    }
  }

  table.appendChild(row1);
  table.appendChild(row2);
}



// тЬЕ col3-table (3rd Prize) рж▓рзЛржб ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
function loadCol3TableData(sheetName) {
  if (!workbookData || !workbookData[sheetName]) return;

  const data = workbookData[sheetName];
  const table = document.getElementById("col3-table");

  const filteredData = data.slice(1).map(row => row[2])
    .filter(cell => cell !== undefined && cell !== null && cell.toString().trim() !== '');


  // ЁЯФБ H1 = data[0][7], fallback = "3rd Prize"
  // ЁЯФБ H2 = data[1][7], optional second part
  const part1 = (data[0]?.[7] ?? "").toString().trim() || "3rd Prize";
  const part2 = (data[1]?.[7] ?? "").toString().trim();

  let labelText = part1;
  if (part2) {
     labelText += ` ${part2}`; // ЁЯСЙ рж╢рзБржзрзБ ржПржХржЯрж╛ space ржжрж┐рзЯрзЗ part2 ржпрзЛржЧ рж╣ржмрзЗ
  }



  const headerRow = table.querySelector("tr.highlight");
  if (headerRow) {
    const headerCell = headerRow.querySelector("td");
    if (headerCell) {
      headerCell.colSpan = 2;
      headerCell.textContent = `${labelText} : Total - ${filteredData.length}`;
    }
  }

  table.querySelectorAll("tr:not(.highlight)").forEach(tr => tr.remove());

  for (let i = 0; i < filteredData.length; i += 2) {
    const tr = document.createElement('tr');
    for (let j = 0; j < 2; j++) {
      const td = document.createElement('td');
      td.textContent = filteredData[i + j] !== undefined ? filteredData[i + j] : '';
      tr.appendChild(td);
    }
    table.appendChild(tr);
  }
}




// тЬЕ col4-table (4th Prize) рж▓рзЛржб ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
function loadCol4TableData(sheetName) {
  if (!workbookData || !workbookData[sheetName]) return;

  const data = workbookData[sheetName];
  const table = document.getElementById("col4-table");

  const filteredData = data.slice(1).map(row => row[3])
    .filter(cell => cell !== undefined && cell !== null && cell.toString().trim() !== '');


  // ЁЯУж I1 = data[0][8], fallback = "4th Prize"
  // ЁЯУж I2 = data[1][8], optional second part
  const part1 = (data[0]?.[8] ?? "").toString().trim() || "4th Prize";
  const part2 = (data[1]?.[8] ?? "").toString().trim();

  let labelText = part1;
  if (part2) {
  labelText += ` ${part2}`; // ЁЯСЙ рж╢рзБржзрзБ ржПржХржЯрж╛ space ржжрж┐рзЯрзЗ 2nd part ржпрзЛржЧ рж╣ржмрзЗ (ржХрзЛржирзЛ ржХржорж╛ ржмрж╛ ржЕржирзНржп ржХрж┐ржЫрзБ ржирж╛)
  }


  const headerRow = table.querySelector("tr.highlight");
  if (headerRow) {
    const headerCell = headerRow.querySelector("td");
    if (headerCell) {
      headerCell.colSpan = 2;
      headerCell.textContent = `${labelText} : Total - ${filteredData.length}`;
    }
  }

  table.querySelectorAll("tr:not(.highlight)").forEach(tr => tr.remove());

  for (let i = 0; i < filteredData.length; i += 2) {
    const tr = document.createElement('tr');
    for (let j = 0; j < 2; j++) {
      const td = document.createElement('td');
      td.textContent = filteredData[i + j] !== undefined ? filteredData[i + j] : '';
      tr.appendChild(td);
    }
    table.appendChild(tr);
  }
}


// тЬЕ col5-table (5th Prize) рж▓рзЛржб ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
function loadColumnData(sheetName) {
  if (!workbookData || !workbookData[sheetName]) return;

  const data = workbookData[sheetName];
  const table = document.getElementById("col5-table");

  const filteredData = data.slice(1).map(row => row[4])
    .filter(cell => cell !== undefined && cell !== null && cell.toString().trim() !== '');


  // ЁЯУж J1 = data[0][9] (1st part), fallback = "5th Prize"
  // ЁЯУж J2 = data[1][9] (2nd part), optional
  const part1 = (data[0]?.[9] ?? "").toString().trim() || "5th Prize";
  const part2 = (data[1]?.[9] ?? "").toString().trim();

  let labelText = part1;
  if (part2) {
   labelText += ` ${part2}`; // ЁЯСЙ рж╢рзБржзрзБ ржПржХржЯрж╛ space ржжрж┐рзЯрзЗ ржЬрзЛрзЬрж╛ рж╣ржмрзЗ, ржЕржирзНржп ржХрзЛржирзЛ рж╕рж┐ржорзНржмрж▓ ржирж╛
  }


  const headerRow = table.querySelector("tr.highlight");
  if (headerRow) {
    const headerCell = headerRow.querySelector("td");
    if (headerCell) {
      headerCell.colSpan = 5;
      headerCell.textContent = `${labelText} : Total - ${filteredData.length}`;
    }
  }

  table.querySelectorAll("tr:not(.highlight)").forEach(tr => tr.remove());

  for (let i = 0; i < filteredData.length; i += 5) {
    const tr = document.createElement('tr');
    for (let j = 0; j < 5; j++) {
      const td = document.createElement('td');
      td.textContent = filteredData[i + j] !== undefined ? filteredData[i + j] : '';
      tr.appendChild(td);
    }
    table.appendChild(tr);
  }
}

document.addEventListener('DOMContentLoaded', function () {
  
  

  // For mouse
  dropdown.addEventListener('mousedown', setActiveColor);
  dropdown.addEventListener('mouseup', resetColor);
  dropdown.addEventListener('mouseleave', resetColor);

  // For touch devices
  dropdown.addEventListener('touchstart', setActiveColor);
  dropdown.addEventListener('touchend', resetColor);
  dropdown.addEventListener('touchcancel', resetColor);
});
